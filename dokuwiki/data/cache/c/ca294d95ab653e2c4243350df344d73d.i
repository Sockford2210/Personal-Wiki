a:68:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Overview";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:247:"React JS is a JavaScript library used for building dynamic and interactive user interfaces, especially for single-page applications (SPAs). It allows developers to create reusable UI components that efficiently update and render when data changes.";}i:2;i:22;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:269;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:269;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"Key features of react";}i:2;i:271;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:292;}i:9;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:292;}i:10;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:292;}i:11;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:292;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:189:" Component-Based Architecture: Everything in React is a component, these are reusable pieces of code that represent parts of the UI. This modularity makes apps easier to build and maintain.";}i:2;i:296;}i:13;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:485;}i:14;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:485;}i:15;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:485;}i:16;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:485;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:187:" Virtual DOM: React uses a virtual representation of the DOM to detect changes and update only the parts of the real DOM that need to change. This makes updates faster and more efficient.";}i:2;i:489;}i:18;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:676;}i:19;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:676;}i:20;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:676;}i:21;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:676;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:" JSX (JavaScript XML): React uses JSX, a syntax extension that lets you write ";}i:2;i:680;}i:23;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:758;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"-like code directly in JavaScript.";}i:2;i:762;}i:25;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:796;}i:26;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:796;}i:27;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:796;}i:28;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:796;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:146:" One-Way Data Binding: Data flows in a single direction, from parent to child components, which helps keep things predictable and easier to debug.";}i:2;i:800;}i:30;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:946;}i:31;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:946;}i:32;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:946;}i:33;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:946;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:143:" Declarative UI: You describe what the UI should look like for a given state, and React takes care of updating the DOM when that state changes.";}i:2;i:950;}i:35;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1093;}i:36;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1093;}i:37;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1093;}i:38;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1095;}i:39;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:3:"JSX";i:1;i:2;i:2;i:1095;}i:2;i:1095;}i:40;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1095;}i:41;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1095;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:520:"JSX (JavaScript XML) is like html that compiles down to JavaScript and becomes html in the browser, it's how the markup for react components are defined.
As it boils down to JavaScript there are certain keywords you can't use in JSX. A key one is that you can't use 'class' when defining a html element as class is reserved keyword in JS, instead you have to use 'className'.
As it's effectively just JavaScript, you can store the JSX in variables which is what makes it reusable.
An example of JSX stored in a variable:";}i:2;i:1109;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1635;}i:44;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:57:"
const myDiv = <div className='big'>I AM A BIG DIV</div>
";i:1;s:10:"javascript";i:2;N;}i:2;i:1635;}i:45;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1713;}i:46;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Elements";i:1;i:3;i:2;i:1713;}i:2;i:1713;}i:47;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1713;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1713;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:130:"Each JSX block must have a single root element.
For self closing elements such as <img>, you have to include the closing slash
so:";}i:2;i:1730;}i:50;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1866;}i:51;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:56:"
// Allowed in JSX:
<br />

// NOT allowed in JSX:
<br>
";i:1;s:11:"html4strict";i:2;N;}i:2;i:1866;}i:52;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1937;}i:53;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"MultiLine";i:1;i:3;i:2;i:1937;}i:2;i:1937;}i:54;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1937;}i:55;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1937;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"To define multi line JSX blocks you must encase surround the code with brackets.
e.g.:";}i:2;i:1955;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2047;}i:58;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:259:"
const profile = (
  <div>
    <h1>John Smith</h1>
    <img src="images/john.png">
    <article>
      My name is John Smith.
      <br>
      I am a software developer.
      <br>
      I specialize in creating React applications.
    </article>
  </div>
);
";i:1;s:10:"javascript";i:2;N;}i:2;i:2047;}i:59;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2327;}i:60;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"Javascript inside JSX";i:1;i:3;i:2;i:2327;}i:2;i:2327;}i:61;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2327;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2327;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:"To run code as normal javascript inside a JSX statement, escape the JSX with curly brackets e.g.:";}i:2;i:2357;}i:64;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2460;}i:65;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:31:"
const five = <h1>{2 + 3}</h1>
";i:1;s:10:"javascript";i:2;N;}i:2;i:2460;}i:66;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2511;}i:67;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2511;}}